apiVersion: apps/v1
kind: Deployment
metadata:
  name: hdfs-httpfs
spec:
  replicas: 1
  selector:
    matchLabels: {}
  template:
    spec:
      initContainers:
      - name: httpfs-prepare
        image: hadoop-sandbox-main
        args:
        - hdfs-httpfs-prepare
        envFrom:
        - configMapRef:
            name: hadoop-env
        - configMapRef:
            name: httpfs-env
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        volumeMounts:
        - name: catalina
          mountPath: /var/opt/catalina
        - name: hadoop-conf
          mountPath: /etc/hadoop/conf
        - name: package-hadoop
          mountPath: /opt/hadoop
      containers:
      - name: httpfs
        image: hadoop-sandbox-main
        args:
        - hdfs-httpfs
        envFrom:
        - configMapRef:
            name: hadoop-env
        - configMapRef:
            name: httpfs-env
        readinessProbe:
          tcpSocket:
            port: 14000
        securityContext:
          runAsUser: 1005
          runAsGroup: 1005
        volumeMounts:
        - name: catalina
          mountPath: /var/opt/catalina
        - name: hadoop-conf
          mountPath: /etc/hadoop/conf
        - name: mnt
          mountPath: /mnt
        - name: package-hadoop
          mountPath: /opt/hadoop
      volumes:
      - name: catalina
        emptyDir: {}
      - name: hadoop-conf
        configMap:
          name: hadoop-conf
          items:
          - key: core-site.xml
            path: core-site.xml
          - key: hdfs-site.xml
            path: hdfs-site.xml
          - key: httpfs-log4j.properties
            path: httpfs-log4j.properties
          - key: httpfs-signature.secret
            path: httpfs-signature.secret
          - key: httpfs-site.xml
            path: httpfs-site.xml
          - key: log4j.properties
            path: log4j.properties
      - name: mnt
        emptyDir: {}
      - name: package-hadoop
        persistentVolumeClaim:
          claimName: package-hadoop
